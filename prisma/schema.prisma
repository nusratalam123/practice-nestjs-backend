
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(100)
  content     String    @db.Text
  authorId    Int
  author      User?      @relation(fields: [authorId], references: [id])
  categories  String[]  
  tags        String[]  
  likes       Int       @default(0)
  comments    Comment[] 
  isPublished Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}


enum Role {
  ADMIN
  USER
}

model User {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(50)
  email     String    @unique
  role      Role      @default(USER) // Default role is USER
  posts     Post[]   
  comments  Comment[] 
  createdAt DateTime  @default(now())
}

model Project{
  id          Int         @id @default(autoincrement())  
  name        String?      @db.VarChar(20)
  description String?
  startDate  DateTime?     @default(now())
  endData    DateTime?
  status      String
  createdAt  DateTime      @default(now()) 
  updatedAt  DateTime?   
}

model Employee{
  id       Int         @id @default(autoincrement())  
  name     String?
  email    String      @unique
  password String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt() 

}

model RestaurantTable {
  id                  Int      @id @default(autoincrement())  
  name                String   
  description         String?  
  price               Float    
  countryName         String   
  addressOfRestaurant String  
  image_url           String[] 
  dishesName          String   
  totalBookedItem     Int      @default(0)  
  created_at          DateTime @default(now())  
  updated_at          DateTime @updatedAt       
}

